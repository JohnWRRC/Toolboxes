# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# teste_reclassy_script.py
# Created on: 2015-04-18 16:29:26.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import os
import arcpy
from arcpy import env
from arcpy.sa import *

inpfolder=arcpy.GetParameterAsText(0)

#setando o arcgis para pasta
env.workspace=inpfolder

rasterList=arcpy.ListRasters()

#criando pasta de saida
outputfolder=arcpy.GetParameterAsText(1)

#seta o arcgis para a pasta de saida
env.workspace=outputfolder

table=arcpy.GetParameterAsText(2)

NODATA=arcpy.GetParameterAsText(3)

extention=arcpy.GetParameterAsText(4)
arcpy.CheckOutExtension("spatial")    
RemapVal=arcpy.GetParameterAsText(5)
if RemapVal=='true':
    file = open(table, 'r')
    list2final=[]
    tableval=file.readlines()
    del tableval[0]
    for i in tableval:
        index1=i.replace('\n','')
        index2=index1.split(',')
        list2final.append(index2)
        remap = RemapValue(list2final)


RemapRang=arcpy.GetParameterAsText(6)
if RemapRang=='true':
    
    file = open(table, 'r')
    
    list2final=[]
    tableval=file.readlines()
    del tableval[0]
    for i in tableval:
        print i
        index1=i.replace('\n','')
        
        index2=index1.split(',')
        
        index2 = [item.replace('-', ',') for item in index2]
        index3=index2[0]
        
        index4=index3.split(',')
        index5=index2[1]
        index4.append(index5)
        list2final.append(index4)    
        remap = RemapRange(list2final)


if RemapVal==RemapRang:
    file = open(table, 'r')
    list2final=[]
    tableval=file.readlines()
    del tableval[0]
    for i in tableval:
        index1=i.replace('\n','')
        index2=index1.split(',')
        list2final.append(index2)
        remap = RemapValue(list2final)
    



for rt in rasterList:
    inpmap=inpfolder+'\\%s'%rt
    outout=unicode(""+os.path.splitext(rt)[0]+"_reclassify%s"%extention)
    reclassField = "Value"
    
    
    # Check out the ArcGIS Spatial Analyst extension license

    # Execute Reclassify
    outReclassify = Reclassify(inpmap, reclassField, remap, "NODATA")

    # Save the output
    outReclassify.save(outputfolder+'\\%s'%outout)







